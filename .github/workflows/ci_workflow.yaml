# File: ci_workflow.yaml (Debug - Run Python Directly)
name: MLflow Project CI - Diabetes Retraining & Docker Build (Debug Python)

on:
  push:
    branches: [ main ]
    paths:
      - 'MLProject/**'
      - '.github/workflows/ci_workflow.yaml'
  workflow_dispatch:

jobs:
  run-python-script-and-build-docker: # Nama job diubah sedikit
    runs-on: ubuntu-latest

    steps:
      # Langkah 1: Checkout kode
      - name: Checkout repository
        uses: actions/checkout@v4

      # Langkah 2: Setup Miniconda & Environment
      - name: Set up Miniconda and Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: 3.12
          environment-file: MLProject/conda.yaml # Eksplisit tunjuk ke file environment
          activate-environment: msml_project_env # Nama environment dari conda.yaml
          auto-activate-base: false

      # Langkah 3: Check Conda Environment (Opsional)
      - name: Check Conda Environment
        shell: bash -l {0} # Gunakan shell login bash
        run: |
          conda info --envs
          mlflow --version # Cek mlflow command

      # Langkah 4: Set DagsHub/MLflow Environment Variables
      - name: Set up MLflow environment variables
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          # Sesuaikan URL DagsHub Anda
          MLFLOW_TRACKING_URI: https://dagshub.com/Yona1201/msml-proyek-briliona.mlflow
        run: |
          echo "Setting MLflow environment variables..."
          echo "DAGSHUB_USER_NAME=${DAGSHUB_USERNAME}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${DAGSHUB_USERNAME}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${DAGSHUB_TOKEN}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}" >> $GITHUB_ENV
          echo "Env vars set."

      # Langkah 5: Run Python Script Directly (Debugging)
      - name: Run modelling.py Directly
        id: python_run # Ganti ID
        shell: bash -l {0} # Shell login bash
        # PENTING: Pindah working directory ke MLProject
        working-directory: ./MLProject
        run: |
          echo "Attempting to run modelling.py directly..."
          # Langsung jalankan skrip Python
          # Redirect output ke file log (disimpan di root repo)
          python modelling.py > ../python_run_output.txt 2>&1

          # Tampilkan log lengkap
          echo "--- Full Python Script Log ---"
          cat ../python_run_output.txt
          echo "----------------------------"

          # Ekstraksi RUN_ID dari output Python
          RUN_ID=$(grep 'Final Run ID:' ../python_run_output.txt | awk '{print $NF}')

          # Validasi Run ID
          if [[ -z "$RUN_ID" || ! "$RUN_ID" =~ ^[a-f0-9]{32}$ ]]; then
            echo "::error::Could not extract a valid MLflow Run ID from the Python script output."
            echo "::error::Python script likely failed. Check log above for FATAL PYTHON ERROR or Traceback."
            exit 1 # Gagal jika ID tidak ditemukan
          fi

          # Simpan RUN_ID
          echo "MLFLOW_RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Successfully Detected Retraining Run ID: $RUN_ID"

      # --- Langkah ADVANCED (Docker) ---
      # Langkah-langkah ini akan berjalan JIKA langkah 5 berhasil

      # Langkah 6: Login ke Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Langkah 7: Build Docker Image using MLflow
      - name: Build Docker Image with MLflow
        shell: bash -l {0} # Gunakan shell login bash
        env:
           # Variabel MLflow
           MLFLOW_TRACKING_URI: https://dagshub.com/Yona1201/msml-proyek-briliona.mlflow
           MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
           MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
           MLFLOW_RUN_ID_FROM_STEP: ${{ env.MLFLOW_RUN_ID }}
           DOCKERHUB_USERNAME_SECRET: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "Building Docker image for MLflow Run ID: ${MLFLOW_RUN_ID_FROM_STEP}"
          IMAGE_NAME="${DOCKERHUB_USERNAME_SECRET}/diabetes-msml-proyek:latest"
          MODEL_URI="runs:/${MLFLOW_RUN_ID_FROM_STEP}/model"
          echo "Using Model URI: ${MODEL_URI}"
          mlflow models build-docker --model-uri "${MODEL_URI}" --name "${IMAGE_NAME}" --enable-mlserver
          echo "DOCKER_IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV

      # Langkah 8: Push Docker Image ke Docker Hub
      - name: Push Docker Image
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}